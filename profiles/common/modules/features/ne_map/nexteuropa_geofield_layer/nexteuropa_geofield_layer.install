<?php
/**
 * @file
 * Installation and schema hooks for nexteuropa_geofield_layer.module.
 */

/**
 * Implements hook_install().
 */
function nexteuropa_geofield_layer_install() {

  // Creates the Nexteuropa geofield map layer.
  _create_nexteuropa_geofield_layer();

  // Adds fields to Nexteuropa geofield map layer.
  _create_nexteuropa_geofield_map_field();
}

/**
 * Creates the Nexteuropa geofield map layer.
 */
function _create_nexteuropa_geofield_layer() {
  $bundle = new stdClass();
  $bundle->type = 'nexteuropa_geofield_layer';
  $bundle->label = t('Nexteuropa geofield layer');
  $bundle->is_new = TRUE;
  $bundle->description = t("Map layer from Nexteuropa geofield data");
  $controller = new MapLayerTypeController('map_layer_type');
  $controller->save($bundle);
}

/**
 * Creates the mapeditor geospatial field.
 */
function _create_nexteuropa_geofield_map_field() {

  // Checks if the field type exists. Otherwise the field cannot be created.
  // See https://www.drupal.org/node/906668.
  if (field_info_field_types('geofield_geojson')) {

    // Checks if the field already exists.
    if (field_info_field('map_geospatial')) {
      watchdog('nexteuropa_geofield_layer', 'Field Nexteuropa geofield not created because it exists already', array(), WATCHDOG_NOTICE, NULL);
    }
    else {

      // Defines list of fields to be created.
      $array_fields = array(
        'map_geospatial' => array(
          'field_name' => 'map_geospatial',
          'type' => 'geofield_geojson',
          'cardinality' => 1,
          'deleted' => 0,
          'entity_types' => array(),
          'locked' => 1,
          'module' => 'nexteuropa_geofield',
          'settings' => array(),
          'translatable' => 0,
        ),
      );

      // Creates the defined field(s).
      foreach ($array_fields as $field) {
        field_create_field($field);
      }
    }
    // Defines the list of field instances to be created.
    $t = get_t();
    $array_instances = array(
      'map_geospatial' => array(
        'field_name' => 'map_geospatial',
        'label' => $t('Geospatial data'),
        'description' => $t('Use the map widget to create geospatial data'),
        'widget' => array(
          'active' => 1,
          'module' => 'nexteuropa_geofield',
          'settings' => array(
            'fs_default_map_center' => array(
              'lat' => 50.84697,
              'lng' => 4.35181,
            ),
            'fs_objects' => array(
              'fs_prepopulate' => array(
                'description_populate' => 'body',
                'name_populate' => 'title_field',
              ),
              'objects' => array(
                'marker' => 'marker',
                'polygon' => 'polygon',
                'polyline' => 'polyline',
                'rectangle' => 'rectangle',
              ),
              'objects_amount' => 10,
            ),
          ),
          'type' => 'geofield_widget_map',
          'weight' => 32,
        ),
        'display' => array(
          'default' => array(
            'label' => 'above',
            'settings' => array(),
            'type' => 'hidden',
            'weight' => 1,
          ),
        ),
        'entity_type' => 'map_layer',
        'bundle' => 'nexteuropa_geofield_layer',
      ),
    );

    // Creates the field instance on the entity.
    foreach ($array_instances as $instance) {
      field_create_instance($instance);
    }
  }
}

/**
 * Lock field.
 */
function nexteuropa_geofield_layer_update_7004() {
  $field_name = 'map_geospatial';
  $field = field_read_field($field_name);

  // Sets field lock: 0: unlock; 1: lock.
  $field['locked'] = 0;
  field_update_field($field);
}

/**
 * Changes map layer field.
 *
 * Adds country layer as target bundles.
 */
function nexteuropa_geofield_layer_change_map_layers_field() {
  $field_info = field_read_field('map_layers');

  // Adds country layer as target bundles.
  $field_info['settings']['handler_settings']['target_bundles']['nexteuropa_geofield_layer'] = 'nexteuropa_geofield_layer';
  field_update_field($field_info);
}

/**
 * change layer field
 * @todo clean up.
 */
function nexteuropa_geofield_layer_update_7003() {
  nexteuropa_geofield_layer_change_map_layers_field();
}
