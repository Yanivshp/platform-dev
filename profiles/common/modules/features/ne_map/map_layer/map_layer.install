<?php

/**
 * Implements hook_schema().
 */
function map_layer_schema() {
  $schema = array();

  $schema['map_layer'] = array(
    'description' => 'The base table for map layers.',
    'fields' => array(
      'mlid' => array(
        'description' => 'The primary identifier for the map layer.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this map layer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'description' => 'The title of the map layer.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the map layer was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the map layer was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'description' => array(
        'description' => 'map layer description.',
        'type' => 'text',
      ),
      'settings' => array(
        'description' => 'Settings in JSON',
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'sortable' => TRUE,
        'views' => TRUE,
      ),
    ),
    'primary key' => array('mlid'),
  );

  $schema['map_layer_type'] = array(
    'description' => 'Stores information about all defined map layer types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique map layer type ID.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this type.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A brief description of this type.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'medium',
        'translatable' => TRUE,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}


function map_layer_install() {

  // Gives default users permissions to view map layers.
  $permissions = array('view map_layer entities');
  foreach(array('anonymous user', 'authenticated user') as $role_name) {
    $role = user_role_load_by_name($role_name);
    user_role_grant_permissions($role->rid, $permissions);
  }
}

/**
 * Deletes obsolete field.
 * @todo REMOVE
 */
function map_layer_update_7001() {
  $fields = array(
    'field_sdhkjhsdkfjh',
    'field_asassd',

  );
  foreach ($fields as $field) {
    if ($instance = field_info_instance('map_layer', $field, 'nolose_layer')) {
      field_delete_instance($instance);
    }
  }
  field_purge_batch(count($fields));
}

/**
 * Creates URL layer.
 */
function map_layer_update_7002() {

}

/**
 * Grant permission to view map layers.
 */
function map_layer_update_7003() {
  $permissions = array('view map_layer entities');
  $role = user_role_load_by_name('anonymous user');
  user_role_grant_permissions($role->rid, $permissions);
}

/**
 * Grant permission to view map layers.
 */
function map_layer_update_7004() {
  $permissions = array('view map_layer entities');
  foreach(array('anonymous user', 'authenticated user') as $role_name) {
    $role = user_role_load_by_name($role_name);
    user_role_grant_permissions($role->rid, $permissions);
  }
}

/**
 * Do something.
 */
function map_layer_update_7007() {

}