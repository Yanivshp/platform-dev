<?php
/**
 * @file
 * Provides functionality for the Nexteuropa map tile layer.
 */

/**
 * Alters map layer content.
 *
 * See MapLayerController->buildContent();
 */
function nexteuropa_map_tile_layer_content_alter(&$content, $wrapper, $entity) {
  $layers = array();

  // Fetches map data from tile layer.
  if ($entity->type == 'tile_layer') {
    $settings = drupal_json_decode($wrapper->settings->value());
    $layers[] = array(
      'layer_settings' => $settings,
      'label' => $wrapper->title->value(),
      'id' => nexteuropa_map_layer_id($wrapper->title->value()),
    );
    $content['#attached']['js'][] = array(
      'data' => array(
        'tile_layers' => $layers,
      ),
      'type' => 'setting',
    );
  }
  return $content;
}

/**
 * Alters the inline entity form of the map layer.
 *
 * See MapLayerInlineEntityFormController->EntityForm().
 */
function nexteuropa_map_tile_layer_inline_entity_form_alter(&$entity_form, $settings, $type) {
  if ($type == 'tile_layer') {
    $entity_form['tiles'] = nexteuropa_map_layer_form_elements('tiles', $settings);
    $entity_form['attribution'] = nexteuropa_map_layer_form_elements('attribution', $settings);
  }
  return $entity_form;
}

/**
 * Alters the map layer settings.
 *
 * See MapLayerInlineEntityFormController->entityFormSubmit() and
 * nexteuropa_map_layer_form_submit().
 */
function nexteuropa_map_tile_map_layer_settings_alter(&$settings, $map_layer, $form_state) {
  if ($map_layer->type == 'tile_layer') {
    $settings['tiles'] = $map_layer->tiles;
    $settings['attribution'] = $map_layer->attribution;
    $settings['control'] = $map_layer->control;
  }
  return $settings;
}

/**
 * Alters map content.
 *
 * See MapController->buildContent().
 */
function nexteuropa_map_tile_map_content_alter(&$custom_js) {
  $tile_layer_js = base_path() . drupal_get_path('module', 'nexteuropa_map_tile') . "/js/tile_layer.js?v=" . rand(0, 33333);
  $custom_js[] = $tile_layer_js;
  return $custom_js;
}
